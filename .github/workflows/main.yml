name: Python application testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'  # Specify the Python version you need

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt  # If you have additional dependencies

    - name: Test with pytest
      run: |
        pytest
  deploy:
      needs: [build]  # Assuming 'build' is your previous job that needs to pass
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: your-ec2-public-dns-or-ip
        run: |
          # Install SSH Client
          sudo apt-get update && sudo apt-get install -y openssh-client
          # Setup SSH Key
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$EC2_HOST" >> ~/.ssh/known_hosts
          # SSH to EC2 and run Docker commands
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$EC2_HOST << 'EOF'
            # Commands to build and run your Docker container
            cd ~/cv-webapp
            git pull origin main # Pull latest code
            
            # Stop and remove the Docker container
            docker ps -q --filter "name=cv-webapp" | grep -q . && docker stop cv-webapp
            docker ps -aq --filter "name=cv-webapp" | grep -q . && docker rm cv-webapp

            # Remove the Docker image
            docker images -q cv-webapp| grep -q . && docker rmi cv-webapp

            # Build and run the new Docker image
            docker build -t cv-webapp .
            docker run -d --name cv-webapp -p 5002:80 cv-webapp
          EOF
